# Generated by Django 3.2.12 on 2023-07-26 10:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('instances', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('second_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('matricule', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(default='', max_length=40, null=True)),
                ('last_name', models.CharField(default='', max_length=40, null=True)),
                ('phone', models.CharField(max_length=50, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('genre', models.CharField(blank=True, choices=[('Mascluin', 'Masculin'), ('Féminin', 'Féminin')], default='', max_length=100)),
                ('chief', models.IntegerField(null=True)),
                ('has_chief', models.BooleanField(default=False)),
                ('is_chef', models.BooleanField(default=False)),
                ('is_adjoint', models.BooleanField(default=False)),
                ('is_view_statistique', models.BooleanField(default=False)),
                ('isAdminInstance', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='APPLICATION DE GESTION DE COURRIERS', max_length=5000)),
                ('logo', models.CharField(blank=True, max_length=255)),
                ('sigle', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, default='oui', max_length=255, null=True)),
                ('category', models.CharField(blank=True, choices=[('Departement', 'Departement'), ('Gouvernement', 'Gouvernement'), ('Institution', 'Institution'), ('Direction', 'Direction')], max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name_permission', models.CharField(blank=True, choices=[('Create', 'Create'), ('Read', 'Read'), ('Update', 'Update'), ('Delete', 'Delete'), ('Manage', 'Manage')], max_length=100)),
                ('instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instance_premission', to='instances.instance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Type_Utilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('can_create_courrier', models.BooleanField(default=False)),
                ('can_transmit_courrier', models.BooleanField(default=False)),
                ('can_annotate_courrier', models.BooleanField(default=False)),
                ('can_assign_courrier', models.BooleanField(default=False)),
                ('can_treat_courrier', models.BooleanField(default=False)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('can_see_private_assignement', models.BooleanField(default=False)),
                ('permissions', models.JSONField(default=list, null=True)),
                ('home', models.CharField(blank=True, default='mes courriers', max_length=100, null=True)),
                ('instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instances_type_users', to='instances.instance')),
            ],
            options={
                'unique_together': {('name', 'instance')},
            },
        ),
        migrations.CreateModel(
            name='Type_Utilisateur_Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instance_user_permission', to='instances.instance')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_type_user', to='user.permission')),
                ('type_utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_user_permission', to='user.type_utilisateur')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Track_Actions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('page', models.CharField(max_length=900)),
                ('ip_addresse', models.CharField(max_length=900)),
                ('navigateur', models.CharField(max_length=900)),
                ('action_effectue', models.CharField(max_length=900)),
                ('date_action', models.DateField(auto_now_add=True)),
                ('heure', models.TimeField(auto_now_add=True)),
                ('instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instance_track_action', to='instances.instance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trackActions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('service_tutelle', models.IntegerField(blank=True, null=True)),
                ('instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_instances_service', to='instances.instance')),
            ],
            options={
                'unique_together': {('name', 'instance')},
            },
        ),
        migrations.CreateModel(
            name='Fonction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('sigle', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_instance_fonction', to='instances.instance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigAnnotationInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('index', models.IntegerField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=255, null=True)),
                ('message_annotation', models.TextField(blank=True)),
                ('instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instance_fonction_annotation', to='instances.instance')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_instance_annotation', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-index'],
            },
        ),
        migrations.CreateModel(
            name='CompanyFonction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=255, null=True)),
                ('message_annotation', models.TextField(blank=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_related_name', to='user.company')),
                ('fonction', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_function_related', to='user.fonction')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='utilisateur_related_name', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='fonction',
            field=models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fonctions', to='user.fonction'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='instance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instance_related_user', to='instances.instance'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='service',
            field=models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='services', to='user.services'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='type_utilisateur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='type_utilisateurs', to='user.type_utilisateur'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
